---
import Button from './Button.astro'
import Colors from './../enums/colors'
import Discord from './icons/Discord.astro'
import { getSession } from 'auth-astro/server'

interface Props {
  Color_bg: string
  Color_text: string
  showSocials?: boolean
}

const { Color_bg, Color_text, showSocials } = Astro.props

const session = await getSession(Astro.request)
const showSignOut = import.meta.env.SHOW_SIGN_OUT
---

<header class=`flex flex-row items-center gap-7 p-5 text-2xl ${Color_bg}`>
  <a href='/'>
    <div class='h-10 w-10 rounded-full bg-white'></div>
  </a>

  <nav class=`flex items-center justify-center gap-7 ${Color_text}`>
    <!-- <a href='#'>Vota</a> -->
    <a href='/categorias'>Categorias</a>
  </nav>
  <div class='flex-grow'></div>
  {
    showSocials && (
      <Button
        id='discord'
        color={Colors.BlackPearl}
        variant='outline'
        size='md'
      >
        <div class='flex'>
          <Discord class='mr-2 size-9' />
          <span>Discord</span>
        </div>
      </Button>
    )
  }
  {
    session ? (
      <>
        <div class='pointer-events-none text-3xl'>{session.user?.name}</div>
        {showSignOut && (
          <Button
            id='logout'
            color={Colors.BlackPearl}
            variant='outline'
            size='md'
          >
            <div class='flex'>
              <span>Cerrar Sesión</span>
            </div>
          </Button>
        )}
      </>
    ) : (
      <Button id='login' color={Colors.BlackPearl} variant='outline' size='md'>
        <div class='flex'>
          <span>Iniciar Sesión</span>
        </div>
      </Button>
    )
  }
</header>
<script>
  const discordButton = document.querySelector('#discord')
  discordButton?.addEventListener('click', () => {
    window.open('https://discordapp.com/invite/zeling', '_blank')
  })
</script>
<script>
  const { signIn, signOut } = await import('auth-astro/client')

  const loginButton = document.querySelector('#login') as HTMLButtonElement
  const logoutButton = document.querySelector('#logout') as HTMLButtonElement

  loginButton && (loginButton.onclick = () => signIn('twitch'))
  logoutButton && (logoutButton.onclick = () => signOut())
</script>
