---
import Button from './Button.astro'
import Colors from './../enums/colors'
import Discord from './icons/Discord.astro'

export interface Props {
  bgColor: string
  textColor: string
  routes?: { route: string; name: string }[]
  showSocials?: boolean
  showLogin?: boolean
  buttonsStyle: Colors
}

const { bgColor, textColor, showSocials, showLogin, buttonsStyle, routes } =
  Astro.props
const user = Astro.locals.user
const showSignOut = import.meta.env.SHOW_SIGN_OUT === 'true'
---

<header class=`flex flex-row items-center gap-4 py-5 px-12 text-2xl ${bgColor}`>
  <a href='/'>
    <div class='size-12 rounded-full bg-[radial-gradient(#000,#0000)]'>
      <div
        class="size-12 bg-[url('/peepoZeling.webp')] bg-[_80%_80%] bg-center bg-no-repeat"
      >
      </div>
    </div>
  </a>

  <nav class=`flex items-center justify-center gap-7 ${textColor}`>
    {routes?.map(({ route, name }) => <a href={route}>{name}</a>)}
  </nav>
  <div class='flex-grow'></div>
  {
    showSocials && (
      <Button id='discord' color={buttonsStyle} variant='outline' size='md'>
        <div class='flex'>
          <Discord class='mr-2 size-9' />
          <span>Discord</span>
        </div>
      </Button>
    )
  }

  {
    showLogin && (
      <>
        {user ? (
          <>
            <div
              class={`pointer-events-none flex flex-row items-center ${textColor}`}
            >
              <img src={user?.profileImageUrl} class='size-12 rounded-full' />
              <span class='ml-2 text-2xl'>{user.username}</span>
            </div>
            {showSignOut && (
              <Button
                id='logout'
                color={buttonsStyle}
                variant='outline'
                size='md'
              >
                <div class='flex'>
                  <span>Cerrar Sesión</span>
                </div>
              </Button>
            )}
          </>
        ) : (
          <Button id='login' color={buttonsStyle} variant='outline' size='md'>
            <div class='flex'>
              <span>Iniciar Sesión</span>
            </div>
          </Button>
        )}
      </>
    )
  }
</header>
<script>
  const discordButton = document.querySelector('#discord')
  discordButton?.addEventListener('click', () => {
    window.open('https://discordapp.com/invite/zeling', '_blank')
  })
</script>
<script>
  const loginButton = document.querySelector('#login') as HTMLButtonElement
  const logoutButton = document.querySelector('#logout') as HTMLButtonElement
  const logoutForm = document.querySelector('#logoutForm') as HTMLFormElement

  loginButton?.addEventListener('click', () => {
    window.open('/login/twitch', '_self')
  })

  logoutButton?.addEventListener('click', async () => {
    await fetch('/api/logout', { method: 'POST' })
  })
</script>
